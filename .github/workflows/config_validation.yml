name: Chain Config Validation

on:
  pull_request:
    branches: [ main ] # Or your default branch
    paths:
      - 'chains/**.json' # Only run if JSON files in chains/ change

jobs:
  validate-configs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Need full history for changed-files

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Or your preferred Node.js version
          cache: 'npm' # Enable caching for npm, uses package-lock.json
          cache-dependency-path: scripts/config-validator/package-lock.json # Specify lock file path

      - name: Get changed JSON files in chains/
        id: changed-files
        uses: tj-actions/changed-files@v41 # Use a specific version
        with:
          files: chains/**/*.json

      - name: Install JSON Schema Validator (ajv-cli)
        if: steps.changed-files.outputs.any_changed == 'true'
        run: npm install -g ajv-cli # Global install might not be cached by default setup, but usually fast

      - name: Install Validator Script Dependencies
        if: steps.changed-files.outputs.any_changed == 'true' # Only install if JSONs changed
        working-directory: ./scripts/config-validator
        run: npm install

      # Add build step if necessary, e.g., npm run build
      # - name: Build Validator Script
      #   if: steps.changed-files.outputs.any_changed == 'true'
      #   working-directory: ./scripts/config-validator
      #   run: npm run build # Assuming you have a build script in package.json

      - name: Validate Changed Files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Changed JSON files in chains/: ${{ steps.changed-files.outputs.all_changed_files }}"
          VALIDATION_FAILED=false
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "Processing $file..."
            IS_INITIA=false
            INITIA_CHECKS_PASSED=false
            GENERAL_SCHEMA_PASSED=false

            # Check if the file structure looks like a chain config
            if [[ "$file" == chains/*/*.json ]]; then # Basic check for chains/ANYTHING/some.json

              # Step 1: Attempt Initia-specific validation script first
              echo "Attempting Initia-specific validation script for $file..."
              if npx ts-node $GITHUB_WORKSPACE/scripts/config-validator/src/validate-initia.ts "$GITHUB_WORKSPACE/$file"; then
                echo "Initia script succeeded for $file. Treating as Initia chain."
                IS_INITIA=true

                # Step 2 (Initia): Validate against Initia schema
                echo "Validating $file against Initia schema ($GITHUB_WORKSPACE/initia.chain.schema.json)..."
                if ajv validate -s $GITHUB_WORKSPACE/initia.chain.schema.json -d "$GITHUB_WORKSPACE/$file"; then
                  echo "Initia schema validation passed for $file."
                  INITIA_CHECKS_PASSED=true
                else
                  echo "Initia schema validation FAILED for $file."
                  # Failure handled below
                fi
              else
                echo "Initia script failed or did not identify $file as an Initia chain."
                IS_INITIA=false
              fi

              # Step 2 (Non-Initia): If not handled as Initia, try general schema
              if [[ "$IS_INITIA" == false ]]; then
                echo "Validating $file against general schema ($GITHUB_WORKSPACE/chain.schema.json)..."
                if ajv validate -s $GITHUB_WORKSPACE/chain.schema.json -d "$GITHUB_WORKSPACE/$file"; then
                  echo "General schema validation passed for $file."
                  GENERAL_SCHEMA_PASSED=true
                else
                  echo "General schema validation FAILED for $file."
                  # Failure handled below
                fi
              fi

              # Step 3: Determine overall success/failure for this file
              if [[ "$IS_INITIA" == true && "$INITIA_CHECKS_PASSED" == false ]]; then
                echo "---> Validation FAILED for Initia chain $file (Script passed, Schema failed OR Script failed)"
                VALIDATION_FAILED=true
              elif [[ "$IS_INITIA" == false && "$GENERAL_SCHEMA_PASSED" == false ]]; then
                # This covers cases where Initia script failed AND general schema failed
                echo "---> Validation FAILED for non-Initia chain $file (General Schema failed)"
                VALIDATION_FAILED=true
              elif [[ "$IS_INITIA" == false && "$GENERAL_SCHEMA_PASSED" == true ]]; then
                echo "---> Validation PASSED for non-Initia chain $file."
              elif [[ "$IS_INITIA" == true && "$INITIA_CHECKS_PASSED" == true ]]; then
                echo "---> Validation PASSED for Initia chain $file."
              fi

            else
              echo "Skipping file (does not match chains/*/*.json pattern): $file"
            fi

            echo # Add a newline for readability between files
          done

          # Final check
          if [[ "$VALIDATION_FAILED" == true ]]; then
            echo "One or more configuration validations failed."
            exit 1
          else
            echo "All configuration validations passed."
          fi 